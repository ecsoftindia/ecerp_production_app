<ion-modal trigger="open-modal" (willDismiss)="onWillDismiss($event)">
    <ng-template>
      <ion-header>
        <ion-toolbar>
          <ion-buttons slot="start">
            <ion-button (click)="cancel()">Cancel</ion-button>
          </ion-buttons>
          <ion-title>Welcome</ion-title>
          <ion-buttons slot="end">
            <ion-button (click)="confirm()" [strong]="true">Confirm</ion-button>
          </ion-buttons>
        </ion-toolbar>
      </ion-header>
      <ion-content class="ion-padding">
        <ion-item>
          <ion-label position="stacked">Enter your name</ion-label>
          <ion-input type="text" placeholder="Your name" [(ngModel)]="name"></ion-input>
        </ion-item>
      </ion-content>
    </ng-template>
  </ion-modal>



  <div class="form-group relative" *ngIf="!multiple">
    <ng-container *ngIf="label !== ''">
        <div class="d-flex align-items-center">
            <label for="">{{label}} <ng-container *ngIf="required"><span class="text-danger">*</span></ng-container>
            </label>
            <div class="ms-auto d-flex align-items-center">
                <div class="mandatory-text" *ngIf="control?.control?.invalid && errorTrueNow">
                    {{control?.control?.errors | appFormError: errorText}}
                </div>
            </div>
        </div>
    </ng-container>
    <!-- {{search}} -->
    <mat-select class="form-control pad-adj pr-1" [(ngModel)]="value"
        [ngClass]="{'border-danger': control?.control?.invalid && errorTrueNow}" [autofocus]="autofocus"
        [disabled]="btnClickedNow" name="name" (selectionChange)="doChange($event)" (blur)="doBlur()"
        (focus)="doFocus()" (keydown)="checkEnter($event)" #forminput [id]="name">
        <ng-container *ngIf="search">
            <mat-option>
                <ngx-mat-select-search [noEntriesFoundLabel]="'No Data Found'" [placeholderLabel]="placeholderLabel"
                    [(ngModel)]="searchItem" [name]="'searchitem'" type="input">
                    <div class="select-icon" ngxMatSelectSearchClear>
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                            <path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"
                                stroke-width="32" d="M368 368L144 144M368 144L144 368" />
                        </svg>
                    </div>
                    <ion-icon class="select-icon" ngxMatSelectSearchClear name="close-outline"></ion-icon>
                </ngx-mat-select-search>
            </mat-option>
        </ng-container>

        <mat-option [value]="valuetype === 'int' ? 0: ''">Select</mat-option>
        <mat-option *ngFor="let item of itemsNow | selectSearch: searchItem: keyname: sort" [value]="item[key]">
            {{item[keyname]}}
        </mat-option>
    </mat-select>
    <ng-container *ngIf="clearIcon">
        <!-- <ion-icon class="mt-2px s-close" name="close-outline" (click)="onClear()" *ngIf="value" matSuffix
            aria-label="Clear" (click)="value=''">
        </ion-icon> -->
        <div class="input-group-prepend1">
            <div class="ibtn" matRipple (click)="onClear()" *ngIf="value" matSuffix (click)="value=''">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                    <path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="32"
                        d="M368 368L144 144M368 144L144 368" />
                </svg>
            </div>
        </div>
    </ng-container>
</div>



<div class="form-group relative" *ngIf="multiple">
    <ng-container *ngIf="label !== ''">
        <div class="d-flex align-items-center">
            <label for="">{{label}} <ng-container *ngIf="required"><span class="text-danger">*</span></ng-container>
            </label>
            <div class="ms-auto d-flex align-items-center">
                <div class="mandatory-text" *ngIf="control?.control?.invalid && errorTrueNow">
                    {{control?.control?.errors | appFormError: errorText}}
                </div>
            </div>
        </div>
    </ng-container>
    <!-- {{search}} -->
    <mat-select class="form-control pad-adj pr-1" [(ngModel)]="value" [multiple]="true"
        [ngClass]="{'border-danger': control?.control?.invalid && errorTrueNow}" [autofocus]="autofocus"
        [disabled]="btnClickedNow" name="name" (selectionChange)="doChange($event)" (blur)="doBlur()"
        (focus)="doFocus()" (keydown)="checkEnter($event)" #forminput [id]="name" color="primary">

        <ng-container *ngIf="search">
            <mat-option>
                <ngx-mat-select-search [noEntriesFoundLabel]="'No Data Found'" [placeholderLabel]="placeholderLabel"
                    [(ngModel)]="searchItem" [name]="'searchitem'" type="input">
                    <div class="select-icon" ngxMatSelectSearchClear>
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                            <path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"
                                stroke-width="32" d="M368 368L144 144M368 144L144 368" />
                        </svg>
                    </div>
                    <ion-icon class="select-icon" ngxMatSelectSearchClear name="close-outline"></ion-icon>

                </ngx-mat-select-search>
            </mat-option>

        </ng-container>


        <mat-option *ngFor="let item of itemsNow | selectSearch: searchItem: keyname: sort" [value]="item[key]">
            {{item[keyname]}}
        </mat-option>

    </mat-select>

    <div class="input-group-prepend1">
        <div class="ibtn" matRipple (click)="onClearMultiple()"  *ngIf="value && value.length > 0" matSuffix>
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                <path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="32"
                    d="M368 368L144 144M368 144L144 368" />
            </svg>
        </div>
    </div>

    <!-- <div class="input-group-append in-1">
        <button mat-icon-button *ngIf="value && value.length > 0" aria-label="Clear" (click)="onClearMultiple()">
            <mat-icon>close</mat-icon>
        </button>
    </div> -->

    <!-- <ion-icon class="mt-2px s-close" name="close-outline" (click)="onClearMultiple()" *ngIf="value" matSuffix aria-label="Clear"
        (click)="value=[]">
    </ion-icon> -->
</div>